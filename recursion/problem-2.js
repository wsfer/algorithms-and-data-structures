// Even fibonacci numbers
// from https://projecteuler.net/problem=2

/* Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.
*/

function evenFibSum(n) {

    // Base cases:
    if (n < 1) return 0; // No more even
    if (n === 2) return 2; // Last even

    let fib = fibs(n);

    // Recursive case:
    return evenFibSum(n-1) + ((fib % 2 === 0 && fib < 4000000) ? fib : 0);
}

// Must have a way to calculate fibonacci
function fibs(n) {
    if (n <= 1) return 1;
    let a = 0;
    let b = 1;
    for (let i = 0 ; i < n ; i++) {
        [a, b] = [b, a+b];
    }
    return b;
}

console.log(evenFibSum(1000)); // Max expected: 4613732
